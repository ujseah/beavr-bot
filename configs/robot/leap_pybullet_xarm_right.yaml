robot_name: leap_xarm7_right_combo

# Detector used to teleoperate the robot
detector:
  _target_: beavr.components.detector.oculus.OculusVRHandDetector
  host: ${host_address}
  oculus_port: ${oculus_receiver_port}
  unified_pub_port: ${unified_data_port}
  button_port: ${resolution_button_port}
  teleop_reset_port: ${teleop_reset_port}

# Transformation classes used to transform the keypoints
transforms:
  -
    _target_: beavr.components.detector.keypoint_transform.TransformHandPositionCoords
    host: ${host_address}
    keypoint_port: ${unified_data_port}
    transformation_port: ${keypoint_transform_port}
    moving_average_limit: 1

# Visualizers used to visualize the keypoints stream
visualizers:
  -
    _target_: beavr.components.visualizers.visualizer_2d.Hand2DVisualizer
    host: ${host_address}
    transformed_keypoint_port: ${keypoint_transform_port}
    oculus_feedback_port: ${oculus_graph_port}
    display_plot: ${visualize_right_2d}

# Then define the robots
robots:
  # XArm robot using standardized port variables
  -
    _target_: beavr.interfaces.xarm7_robot.XArm7Robot
    host: ${host_address}
    endeff_publish_port: 10010
    endeff_subscribe_port: 10009
    joint_subscribe_port: 10029
    reset_subscribe_port: 10009
    robot_ip: ${right_xarm_ip}

  # LEAP hand robot with standard network.yaml ports
  -
    _target_: beavr.interfaces.leap_robot.LeapHandRobot
    host: ${host_address}
    joint_angle_subscribe_port: ${cartesian_command_publisher_port}
    joint_angle_publish_port: ${joint_publisher_port}
    reset_subscribe_port: ${teleop_reset_publish_port}
    simulation_mode: false

# Then the operators
operators:
  # XArm operator with standardized ports
  -
    _target_: beavr.components.operators.xarm7_right.XArm7RightOperator
    host: ${host_address}
    transformed_keypoints_port: ${keypoint_transform_port}
    stream_configs:
      host: ${host_address}
      port: ${sim_image_port}
    stream_oculus: true
    endeff_publish_port: 10009
    endeff_subscribe_port: 10010
    moving_average_limit: 1
    arm_resolution_port: ${unified_data_port}
    use_filter: False
    teleoperation_reset_port: ${unified_data_port}
    logging_config:
      enabled: False
      log_dir: "logs"
      log_poses: True
      log_prefix: "xarm"

  # LEAP hand operator with standard network.yaml ports
  -
    _target_: beavr.components.operators.leap_pybullet.LeapHandOperator
    host: ${host_address}
    transformed_keypoints_port: ${keypoint_transform_port}
    joint_angle_subscribe_port: ${joint_publisher_port}
    joint_angle_publish_port: ${cartesian_command_publisher_port}
    reset_publish_port: ${teleop_reset_publish_port}
    finger_configs:
      freeze_index: false
      freeze_middle: false
      freeze_ring: false
      freeze_thumb: false
      no_index: false
      no_middle: false
      no_ring: false
      no_thumb: false
      three_dim: true
    logging_config:
      enabled: false
      log_dir: "logs"
      log_poses: true
      log_prefix: "leap"

recorded_data:
  -
    - joint_states
    - cartesian_states
